# Fast and reliable Dockerfile for EspoCRM
FROM php:8.2-fpm-alpine

# Install essential packages
RUN apk add --no-cache \
    nginx \
    supervisor \
    curl \
    mysql-client \
    bash \
    && docker-php-ext-install pdo pdo_mysql mysqli \
    && rm -rf /var/cache/apk/*

# Configure PHP optimizations
RUN echo "memory_limit=256M" > /usr/local/etc/php/conf.d/espo.ini \
    && echo "max_execution_time=300" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "post_max_size=50M" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "upload_max_filesize=50M" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "max_input_time=300" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "max_input_vars=3000" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "date.timezone=Africa/Luanda" >> /usr/local/etc/php/conf.d/espo.ini

# Set working directory
WORKDIR /var/www/html

# Copy application files
COPY . .

# Create required directories and set permissions
RUN mkdir -p /var/log/supervisor /run/nginx /var/log/nginx \
    && mkdir -p data/cache data/logs data/tmp data/upload custom client/custom \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 775 data custom client/custom \
    && chmod -R 777 data/cache data/logs data/tmp data/upload

# Copy configurations
COPY nginx.conf /etc/nginx/nginx.conf
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create wait-for-mysql script with timeout
RUN echo '#!/bin/bash' > /wait-for-mysql.sh \
    && echo 'set -e' >> /wait-for-mysql.sh \
    && echo 'echo "🔍 Waiting for MySQL connection..."' >> /wait-for-mysql.sh \
    && echo 'TIMEOUT=120' >> /wait-for-mysql.sh \
    && echo 'COUNTER=0' >> /wait-for-mysql.sh \
    && echo 'until mysql -h mysql -u ${DB_USER} -p${DB_PASSWORD} -e "SELECT 1" >/dev/null 2>&1; do' >> /wait-for-mysql.sh \
    && echo '  echo "⏳ MySQL not ready yet... waiting 5s ($COUNTER/$TIMEOUT)"' >> /wait-for-mysql.sh \
    && echo '  sleep 5' >> /wait-for-mysql.sh \
    && echo '  COUNTER=$((COUNTER + 5))' >> /wait-for-mysql.sh \
    && echo '  if [ $COUNTER -ge $TIMEOUT ]; then' >> /wait-for-mysql.sh \
    && echo '    echo "❌ MySQL failed to start within $TIMEOUT seconds"' >> /wait-for-mysql.sh \
    && echo '    echo "🔍 Trying to connect to MySQL without password for debugging..."' >> /wait-for-mysql.sh \
    && echo '    mysqladmin ping -h mysql --silent || echo "❌ MySQL not responding to ping"' >> /wait-for-mysql.sh \
    && echo '    exit 1' >> /wait-for-mysql.sh \
    && echo '  fi' >> /wait-for-mysql.sh \
    && echo 'done' >> /wait-for-mysql.sh \
    && echo 'echo "✅ MySQL connection successful!"' >> /wait-for-mysql.sh \
    && chmod +x /wait-for-mysql.sh

# Create enhanced startup script
RUN echo '#!/bin/bash' > /start.sh \
    && echo 'set -e' >> /start.sh \
    && echo 'echo "🚀 Starting EspoCRM for Kwame Oil and Gas..."' >> /start.sh \
    && echo 'echo "🌍 Domain: ${SITE_URL:-crm.kwameoilandgas.ao}"' >> /start.sh \
    && echo 'echo "🏢 Company: Kwame Oil and Gas"' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Wait for MySQL if DB_HOST is set' >> /start.sh \
    && echo 'if [ ! -z "${DB_HOST}" ] && [ "${DB_HOST}" != "localhost" ]; then' >> /start.sh \
    && echo '  /wait-for-mysql.sh' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Clear cache if available' >> /start.sh \
    && echo 'if [ -f /var/www/html/clear_cache.php ]; then' >> /start.sh \
    && echo '  echo "🧹 Clearing EspoCRM cache..."' >> /start.sh \
    && echo '  php /var/www/html/clear_cache.php 2>/dev/null || echo "⚠️ Cache clear failed (normal on first run)"' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo 'echo "✅ Starting services via supervisor..."' >> /start.sh \
    && echo 'exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /start.sh \
    && chmod +x /start.sh

# Enhanced health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 --start-period=60s \
    CMD curl -f http://localhost/ || curl -f http://localhost/index.php || exit 1

EXPOSE 80

CMD ["/start.sh"]
# Production Dockerfile for EspoCRM with full dependencies
FROM php:8.2-fpm-alpine

# Install system packages and development tools
RUN apk add --no-cache \
    nginx \
    supervisor \
    curl \
    bash \
    git \
    unzip \
    icu-dev \
    libzip-dev \
    oniguruma-dev \
    mysql-client \
    iputils \
    net-tools \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libexif-dev

# Install PHP extensions (including GD and EXIF for EspoCRM)
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install \
    pdo \
    pdo_mysql \
    mysqli \
    intl \
    zip \
    gd \
    exif

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Configure PHP settings
RUN echo "memory_limit=512M" > /usr/local/etc/php/conf.d/espo.ini \
    && echo "max_execution_time=300" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "upload_max_filesize=50M" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "post_max_size=50M" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "max_input_time=300" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "max_input_vars=3000" >> /usr/local/etc/php/conf.d/espo.ini \
    && echo "date.timezone=Africa/Luanda" >> /usr/local/etc/php/conf.d/espo.ini

# Set working directory
WORKDIR /var/www/html

# Copy application files
COPY . .

# Install PHP dependencies with Composer
RUN if [ -f composer.json ]; then \
        composer install --no-dev --optimize-autoloader --no-interaction --no-scripts; \
    fi

# Create required directories and set permissions
RUN mkdir -p /var/log/supervisor /run/nginx /var/log/nginx \
    && mkdir -p data cache custom client/custom \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 775 data custom client/custom \
    && chmod -R 775 public/install

# Copy nginx and supervisor configurations
COPY nginx.conf /etc/nginx/nginx.conf
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Copy configuration template for auto-generation
COPY config.template.php /var/www/html/config.template.php

# Copy simplified wait-for-mysql script
COPY wait-for-mysql.sh /wait-for-mysql.sh
RUN chmod +x /wait-for-mysql.sh

# Create production startup script
RUN echo '#!/bin/bash' > /start.sh \
    && echo 'echo "🚀 Starting EspoCRM Production for Kwame Oil and Gas..."' >> /start.sh \
    && echo 'echo "🌍 Domain: ${SITE_URL:-crm.kwameoilandgas.ao}"' >> /start.sh \
    && echo 'echo "🏢 Company: Kwame Oil and Gas"' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Wait for MySQL with simplified delay' >> /start.sh \
    && echo 'if [ ! -z "${DB_HOST}" ] && [ "${DB_HOST}" != "localhost" ]; then' >> /start.sh \
    && echo '  /wait-for-mysql.sh' >> /start.sh \
    && echo 'else' >> /start.sh \
    && echo '  echo "📌 DB_HOST not set or is localhost, skipping MySQL wait"' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Debug: Check if files are in place' >> /start.sh \
    && echo 'echo "📂 Checking file structure..."' >> /start.sh \
    && echo 'if [ -f /var/www/html/public/index.php ]; then' >> /start.sh \
    && echo '  echo "✅ public/index.php found"' >> /start.sh \
    && echo 'else' >> /start.sh \
    && echo '  echo "❌ ERROR: public/index.php NOT found!"' >> /start.sh \
    && echo '  ls -la /var/www/html/' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo 'if [ -d /var/www/html/client ]; then' >> /start.sh \
    && echo '  echo "✅ client directory found"' >> /start.sh \
    && echo 'else' >> /start.sh \
    && echo '  echo "❌ ERROR: client directory NOT found!"' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Ensure data directories exist with correct permissions' >> /start.sh \
    && echo 'echo "🔧 Checking and fixing data directory permissions..."' >> /start.sh \
    && echo 'mkdir -p /var/www/html/data/cache' >> /start.sh \
    && echo 'mkdir -p /var/www/html/data/logs' >> /start.sh \
    && echo 'mkdir -p /var/www/html/data/upload' >> /start.sh \
    && echo 'mkdir -p /var/www/html/data/tmp' >> /start.sh \
    && echo 'mkdir -p /var/www/html/custom/Espo/Custom' >> /start.sh \
    && echo 'mkdir -p /var/www/html/client/custom' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Fix ownership and permissions for all data directories' >> /start.sh \
    && echo 'chown -R www-data:www-data /var/www/html/data' >> /start.sh \
    && echo 'chown -R www-data:www-data /var/www/html/custom' >> /start.sh \
    && echo 'chown -R www-data:www-data /var/www/html/client/custom' >> /start.sh \
    && echo 'chmod -R 775 /var/www/html/data' >> /start.sh \
    && echo 'chmod -R 775 /var/www/html/custom' >> /start.sh \
    && echo 'chmod -R 775 /var/www/html/client/custom' >> /start.sh \
    && echo 'echo "✅ Permissions fixed for data directories"' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# 🔍 Check if EspoCRM database has tables FIRST' >> /start.sh \
    && echo 'echo "🔍 Checking database initialization status..."' >> /start.sh \
    && echo 'DB_HAS_TABLES=false' >> /start.sh \
    && echo 'if mysql -h"${DB_HOST}" -u"${DB_USER}" -p"${DB_PASSWORD}" "${DB_NAME}" -e "SHOW TABLES;" 2>/dev/null | grep -q .; then' >> /start.sh \
    && echo '  echo "✅ Database ${DB_NAME} already initialized with tables"' >> /start.sh \
    && echo '  DB_HAS_TABLES=true' >> /start.sh \
    && echo 'else' >> /start.sh \
    && echo '  echo "⚠️ Database ${DB_NAME} is empty - will trigger installation wizard"' >> /start.sh \
    && echo '  # Clean any existing config to allow fresh install' >> /start.sh \
    && echo '  rm -f /var/www/html/data/config.php' >> /start.sh \
    && echo '  rm -f /var/www/html/data/config-internal.php' >> /start.sh \
    && echo '  rm -rf /var/www/html/data/cache/*' >> /start.sh \
    && echo '  echo "🧹 Cleaned config files for fresh installation"' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Only generate config.php if database has tables (already installed)' >> /start.sh \
    && echo 'if [ "$DB_HAS_TABLES" = "true" ] && [ ! -f /var/www/html/data/config.php ]; then' >> /start.sh \
    && echo '  echo "⚙️ Generating config.php for existing installation..."' >> /start.sh \
    && echo '  php -r "include \"/var/www/html/config.template.php\"; file_put_contents(\"/var/www/html/data/config.php\", \"<?php\\n\" . \"return \" . var_export(include(\"/var/www/html/config.template.php\"), true) . \";\");"' >> /start.sh \
    && echo '  chown www-data:www-data /var/www/html/data/config.php' >> /start.sh \
    && echo '  chmod 640 /var/www/html/data/config.php' >> /start.sh \
    && echo '  echo "✅ config.php generated for existing installation"' >> /start.sh \
    && echo 'elif [ "$DB_HAS_TABLES" = "false" ]; then' >> /start.sh \
    && echo '  echo "📝 Fresh installation - EspoCRM wizard will create config.php"' >> /start.sh \
    && echo '  # Ensure data directory has correct permissions for installer' >> /start.sh \
    && echo '  chown -R www-data:www-data /var/www/html/data' >> /start.sh \
    && echo '  chmod -R 775 /var/www/html/data' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo '# Clear cache if available' >> /start.sh \
    && echo 'if [ -f /var/www/html/clear_cache.php ]; then' >> /start.sh \
    && echo '  echo "🧹 Clearing EspoCRM cache..."' >> /start.sh \
    && echo '  php /var/www/html/clear_cache.php 2>/dev/null || echo "⚠️ Cache clear failed (normal on first run)"' >> /start.sh \
    && echo 'fi' >> /start.sh \
    && echo '' >> /start.sh \
    && echo 'echo "✅ Starting production services via supervisor..."' >> /start.sh \
    && echo 'exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /start.sh \
    && chmod +x /start.sh

# Enhanced health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 --start-period=60s \
    CMD curl -f http://localhost:80/ || curl -f http://localhost:80/index.php || exit 1

EXPOSE 80

CMD ["/start.sh"]